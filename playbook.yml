---
- hosts: localhost
  vars_prompt:
    - name: vault_password
      prompt: "Enter Ansible Vault password (only required the first time)"
      private: yes
  vars:
    user: "{{ ansible_env.USER }}"
    github_host_key: "{{ lookup('pipe', 'ssh-keyscan github.com') }}"
  tasks:
    - name: Update apt
      become: yes
      apt:
        update_cache: yes
      tags: packages
    - name: Add user to sudoers without password
      become: yes
      lineinfile:
        path: /etc/sudoers
        line: "{{ user }} ALL=(ALL) NOPASSWD: ALL"
        validate: "visudo -cf %s"
      tags: sudo

    - name: Add dotnet/backports ppa
      become: yes
      apt_repository:
        repo: ppa:dotnet/backports
        state: present
      tags: packages

    - name: Add docker gpg key
      become: yes
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      tags: packages

    - name: Add docker ppa
      become: yes
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present
      tags: packages

    - name: Install packages
      become: yes
      apt:
        name:
          - i3
          - openssh-server
          - stow
          - git
          - neovim
          - zsh
          - curl
          - clang
          - dotnet-sdk-7.0
          - dotnet-sdk-8.0
          - dotnet-runtime-7.0
          - dotnet-runtime-8.0
          - arandr
          - alacritty
          - firefox
          - pavucontrol
          - brightnessctl
          - gcc
          - plocate
          - xclip
          - flameshot
          - docker-ce
          - redshift
          - pamixer
          - ranger
          - zsh-syntax-highlighting
          - zsh-autosuggestions
          - libnotify-bin 
          - ncdu
          - ripgrep
          - fzf
          - neofetch
          - openvpn
          - simplescreenrecorder
          - chromium-browser
          - atool
          - make
          - dnsutils
          - nmap
          - htop
          - acpi
          - trash-cli
          - sddm-theme-breeze
          - guitarix
          - qbittorrent
          - lutris
          - translate-shell
          - libasound2-dev
          - libgl1-mesa-dev 
          - xorg-dev
          - pkg-config
          - qemu-user
          - gcc-arm-linux-gnueabihf
          - lxappearance
          - picom
          - kolourpaint
          - xdotool
          - steam 
          - cpufrequtils 
        state: present
      tags: packages

    # - name: Install snaps
    #   become: yes
    #   snap:
    #     name:
    #       - 1password
    #       - slack
    #       - insomnia
    #   tags: snaps

    # - name: Install snaps (classic)
    #   become: yes
    #   snap:
    #     classic: yes
    #     name: 
    #       - go
    #       - node
    #   tags: snaps

    - name: Remove unecessary packages
      become: yes
      apt:
        name:
          - modemmanager
        state: absent
      tags: packages

    # - name: Install snaps (beta)
    #   stat:
    #     path: /snap/bin/zig
    #   register: zig
    #   tags: snaps

    # - name: Install snaps (beta)
    #   become: yes
    #   shell: "snap install zig --beta --classic"
    #   tags: snaps
    #   when: not zig.stat.exists

    - name: Check nordvpn exists
      stat:
        path: /usr/bin/nordvpn
      register: nordvpn
      tags: nordvpn

    - name: Install nordvpn
      become: yes
      shell: "curl -sSf https://downloads.nordcdn.com/apps/linux/install.sh | sh"
      when: not nordvpn.stat.exists
      tags: nordvpn

    - name: Start ssh service
      become: yes
      service:
        name: ssh
        state: started
        enabled: yes
      tags: ssh

    - name: Enable docker service
      become: yes
      service:
        name: docker
        state: started
        enabled: yes
      tags: docker

    - name: Start bluetooth service
      become: yes
      service:
        name: bluetooth
        state: started
        enabled: yes
      tags: bluetooth

    - name: Add user to docker group
      become: yes
      user:
        name: "{{ user }}"
        groups: docker
        append: yes
      tags: docker

    - name: Create .ssh directory
      become: yes
      file:
        path: "/home/{{ user }}/.ssh"
        state: directory
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: "0700"
      tags: ssh

    - name: Copy public ssh key
      copy:
        src: "public/ssh/id_ed25519.pub"
        dest: "/home/{{ user }}/.ssh/id_ed25519.pub"
      tags: ssh

    - name: Check ssh key exists
      stat:
        path: "/home/{{ user }}/.ssh/id_ed25519"
      register: ssh_key
      tags: ssh
      
    - name: Copy encrypted ssh keys
      shell: "cat encrypted/ssh/id_ed25519 > /home/{{ user }}/.ssh/id_ed25519"
      when: not ssh_key.stat.exists
      tags: ssh
        
    - name: Create temporary vault password file
      copy:
        content: "{{ vault_password }}"
        dest: /tmp/vault_pass.txt
        mode: "0600"
      when: not ssh_key.stat.exists
      tags: ssh

    - name: Decrypt the private key
      shell: "ansible-vault decrypt /home/{{ user }}/.ssh/id_ed25519 --vault-password-file=/tmp/vault_pass.txt"
      register: decrypt_result
      when: not ssh_key.stat.exists
      tags: ssh

    - name: Remove the vault password file
      shell: "rm /tmp/vault_pass.txt"
      when: not ssh_key.stat.exists
      tags: ssh

    - name: Check dotfiles exists
      stat:
        path: "/home/{{ user }}/dotfiles"
      register: dotfiles
      tags: dotfiles

    - name: Clone dotfiles repository
      git:
        repo: "git@github.com:1337jazz/dotfiles.git"
        accept_hostkey: yes
        dest: "/home/{{ user }}/dotfiles"
      when: not dotfiles.stat.exists
      tags: dotfiles

    - name: Set zsh as default shell
      become: yes
      shell: "chsh -s $(which zsh) {{ user }}"
      tags: zsh

    - name: Check if oh-my-zsh is installed
      stat:
        path: "/home/{{ user }}/.oh-my-zsh"
      register: oh_my_zsh
      tags: zsh

    - name: Install oh-my-zsh
      shell: sh -c "$(curl -fsSL https://install.ohmyz.sh/)"
      when: not oh_my_zsh.stat.exists
      tags: zsh

    - name: Remove default .zshrc
      become: yes
      file:
        path: "/home/{{ user }}/.zshrc"
        state: absent
      tags: zsh

    - name: Ensure the font directory exists
      become: yes
      file:
        path: /usr/local/share/fonts/nerd-fonts
        state: directory
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: '0755'
      tags: fonts

    - name: Check required fonts
      stat:
        path: /usr/local/share/fonts/nerd-fonts/JetBrainsMonoNerdFont-Regular.ttf
      register: font_installed
      tags: fonts

    - name: Download JetBrains Mono Nerd Font
      get_url:
        url: https://github.com/ryanoasis/nerd-fonts/releases/download/v3.0.2/JetBrainsMono.zip
        dest: /tmp/JetBrainsMono.zip
        mode: '0644'
      when: not font_installed.stat.exists
      tags: fonts

    - name: Unzip JetBrains Mono Nerd Font
      ansible.builtin.unarchive:
        src: /tmp/JetBrainsMono.zip
        dest: /usr/local/share/fonts/nerd-fonts/
        remote_src: yes
      when: not font_installed.stat.exists
      tags: fonts

    - name: Refresh font cache
      command: fc-cache -f -v
      when: not font_installed.stat.exists
      tags: fonts

    - name: Stow dotfiles
      shell: "cd /home/{{ user }}/dotfiles && stow ."
      tags: dotfiles

    - name: Fix locale
      become: yes
      shell: |
        localectl set-locale LANG=en_GB.UTF-8
        localectl set-locale LC_TIME=en_GB.UTF-8
        localectl set-locale LC_MONETARY=en_GB.UTF-8
        localectl set-locale LC_NUMERIC=en_GB.UTF-8
        localectl set-locale LC_PAPER=en_GB.UTF-8
        localectl set-locale LC_MEASUREMENT=en_GB.UTF-8
        localectl set-locale LC_NAME=en_GB.UTF-8
        localectl set-locale LC_ADDRESS=en_GB.UTF-8
        localectl set-locale LC_TELEPHONE=en_GB.UTF-8
        localectl set-locale LC_IDENTIFICATION=en_GB.UTF-8
      tags: locale

    - name: Update X11 files
      become: yes
      copy:
        src: "/home/{{ user }}/dotfiles/X11/40-libinput.conf"
        dest: "/etc/X11/xorg.conf.d/40-monitor.conf"
      tags: X11

    - name: Update X11 files
      become: yes
      copy:
        src: "/home/{{ user }}/dotfiles/X11/10-monitor.conf"
        dest: "/etc/X11/xorg.conf.d/10-monitor.conf"
      tags: X11

    - name: Update sddm.conf
      become: yes
      copy:
        src: "/home/{{ user }}/dotfiles/sddm/sddm.conf"
        dest: "/etc/sddm.conf"
      tags: sddm

    - name: Set firefox as default browser
      become: no
      shell: "xdg-settings set default-web-browser firefox.desktop"
      tags: firefox
