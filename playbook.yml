---
- hosts: localhost
  vars_prompt:
    - name: vault_password
      prompt: "Enter Ansible Vault password"
      private: yes
    - name: sudo_password
      prompt: "Enter sudo password"
      private: yes
  vars:
    ansible_become_pass: "{{ sudo_password }}"
    user: "{{ ansible_env.USER }}"
    github_host_key: "{{ lookup('pipe', 'ssh-keyscan github.com') }}"
  tasks:
    - name: Update apt
      become: yes
      apt:
        update_cache: yes
      tags: packages
    - name: Add user to sudoers without password
      become: yes
      lineinfile:
        path: /etc/sudoers
        line: "{{ user }} ALL=(ALL) NOPASSWD: ALL"
        validate: "visudo -cf %s"
      tags: sudo
    - name: Add the dotnet/backports ppa
      become: yes
      apt_repository:
        repo: ppa:dotnet/backports
        state: present
      tags: packages
    - name: Install packages
      become: yes
      apt:
        name:
          - i3
          - openssh-server
          - stow
          - git
          - neovim
          - zsh
          - curl
          - clang
          - dotnet-sdk-7.0
          - dotnet-sdk-8.0
          - dotnet-runtime-7.0
          - dotnet-runtime-8.0
          - arandr
        state: present
      tags: packages

    - name: Start ssh service
      become: yes
      service:
        name: ssh
        state: started
        enabled: yes
      tags: ssh

    - name: Create .ssh directory
      become: yes
      file:
        path: "/home/{{ user }}/.ssh"
        state: directory
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: "0700"
      tags: ssh

    - name: Copy public ssh key
      copy:
        src: "public/ssh/id_ed25519.pub"
        dest: "/home/{{ user }}/.ssh/id_ed25519.pub"
      tags: ssh

    - name: Check ssh key exists
      stat:
        path: "/home/{{ user }}/.ssh/id_ed25519"
      register: ssh_key
      tags: ssh
      
    - name: Copy encrypted ssh keys
      shell: "cat encrypted/ssh/id_ed25519 > /home/{{ user }}/.ssh/id_ed25519"
      when: not ssh_key.stat.exists
      tags: ssh
        
    - name: Create temporary vault password file
      copy:
        content: "{{ vault_password }}"
        dest: /tmp/vault_pass.txt
        mode: "0600"
      when: not ssh_key.stat.exists
      tags: ssh

    - name: Decrypt the private key
      shell: "ansible-vault decrypt /home/{{ user }}/.ssh/id_ed25519 --vault-password-file=/tmp/vault_pass.txt"
      register: decrypt_result
      when: not ssh_key.stat.exists
      tags: ssh

    - name: Remove the vault password file
      shell: "rm /tmp/vault_pass.txt"
      when: not ssh_key.stat.exists
      tags: ssh

    - name: Check dotfiles exists
      stat:
        path: "/home/{{ user }}/dotfiles"
      register: dotfiles
      tags: dotfiles

    - name: Clone dotfiles repository
      git:
        repo: "git@github.com:1337jazz/dotfiles.git"
        accept_hostkey: yes
        dest: "/home/{{ user }}/dotfiles"
      when: not dotfiles.stat.exists
      tags: dotfiles

    - name: Stow dotfiles
      shell: "cd /home/{{ user }}/dotfiles && stow ."
      when: not dotfiles.stat.exists
      tags: dotfiles

    - name: Set zsh as default shell
      become: yes
      shell: "chsh -s $(which zsh)"
      tags: zsh

    - name: Check if oh-my-zsh is installed
      stat:
        path: "/home/{{ user }}/.oh-my-zsh"
      register: oh_my_zsh
      tags: zsh

      register: oh_my_zsh
    - name: Install oh-my-zsh
      shell: sh -c "$(curl -fsSL https://install.ohmyz.sh/)"
      when: not oh_my_zsh.stat.exists
      tags: zsh
