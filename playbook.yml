---
- hosts: localhost
  vars_prompt:
    - name: vault_password
      prompt: "Enter Ansible Vault password"
      private: yes
    - name: sudo_password
      prompt: "Enter sudo password"
      private: yes
  vars:
    ansible_become_pass: "{{ sudo_password }}"
  tasks:
    - name: Install packages
      become: yes
      apt:
        name:
          - i3
          - openssh-server
          - stow
          - git
          - neovim
          - zsh
        state: present

    - name: Start ssh service
      become: yes
      service:
        name: ssh
        state: started
        enabled: yes

    - name: Create .ssh directory
      file:
        path: "/home/{{ ansible_env.USER }}"
        state: directory
        owner: "{{ ansible_env.USER }}"
        group: "{{ ansible_env.USER }}"
        mode: "0600"

    # - name: Copy encrypted ssh keys
    #   copy:
    #     src: "encrypted/ssh/id_ed25519"
    #     dest: "/home/{{ ansible_env.USER }}/.ssh/id_ed25519"
        
    - name: Create temporary vault password file
      copy:
        content: "{{ vault_password }}"
        dest: /tmp/vault_pass.txt
        mode: "0600"

    - name: Decrypt the private key
      shell: "ansible-vault decrypt /home/{{ ansible_env.USER }}/.ssh/id_ed25519 --vault-password-file=/tmp/vault_pass.txt --output=/home/{{ ansible_env.USER }}/.ssh/id_ed25519"
      vars:
        vault_pass_file: "/tmp/vault_pass.txt"
      environment:
        VAULT_PASSWORD_FILE: "{{ vault_pass_file }}"
      register: decrypt_result

    - name: Remove the vault password file
      file:
        path: "{{ vault_pass_file }}"
        state: absent
      when: decrypt_result is succeeded

    - name: Copy public ssh key
      copy:
        src: "public/ssh/id_ed25519.pub"
        dest: "/home/{{ ansible_env.USER }}/.ssh/id_ed25519.pub"
